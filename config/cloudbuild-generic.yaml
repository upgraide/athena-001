steps:
  # Build service
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build', 
      '--platform', 'linux/amd64',
      '-t', 'europe-west3-docker.pkg.dev/$PROJECT_ID/finance-containers/${_SERVICE_NAME}:${_SERVICE_HASH}',
      '-f', 'Dockerfile',
      '--build-arg', 'SERVICE_NAME=${_SERVICE_NAME}',
      '.'
    ]
    dir: '.'
    id: 'build-service'

  # Push to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push', 
      'europe-west3-docker.pkg.dev/$PROJECT_ID/finance-containers/${_SERVICE_NAME}:${_SERVICE_HASH}'
    ]
    id: 'push-service'
    waitFor: ['build-service']

  # Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: [
      'run', 'deploy', '${_SERVICE_NAME}',
      '--image', 'europe-west3-docker.pkg.dev/$PROJECT_ID/finance-containers/${_SERVICE_NAME}:${_SERVICE_HASH}',
      '--region', 'europe-west3',
      '--platform', 'managed',
      '--vpc-connector', 'athena-vpc-connector',
      '--vpc-egress', 'private-ranges-only',
      '--service-account', 'microservice-sa@$PROJECT_ID.iam.gserviceaccount.com',
      '--set-env-vars', 'PROJECT_ID=$PROJECT_ID,NODE_ENV=production,REGION=europe-west3',
      '--set-secrets', 'JWT_ACCESS_SECRET=jwt-access-secret:latest,JWT_REFRESH_SECRET=jwt-refresh-secret:latest',
      '--memory', '1Gi',
      '--cpu', '1',
      '--min-instances', '0',
      '--max-instances', '10',
      '--timeout', '300',
      '--concurrency', '100',
      '--allow-unauthenticated',
      '--port', '8080',
      '--execution-environment', 'gen2'
    ]
    id: 'deploy-service'
    waitFor: ['push-service']

  # Health check after deployment
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args: [
      '-c',
      'SERVICE_URL=$$(gcloud run services describe ${_SERVICE_NAME} --region=europe-west3 --format="value(status.url)") && echo "Testing health at: $$SERVICE_URL/health" && for i in {1..10}; do echo "Health check attempt $$i/10..." && if curl -f -s "$$SERVICE_URL/health"; then echo "✅ Health check passed"; exit 0; fi; sleep 10; done; echo "❌ Health check failed after 10 attempts"; exit 1'
    ]
    id: 'health-check'
    waitFor: ['deploy-service']

substitutions:
  _SERVICE_NAME: 'finance-master'
  _SERVICE_HASH: 'latest'

options:
  logging: CLOUD_LOGGING_ONLY
  substitution_option: 'ALLOW_LOOSE'
  
timeout: '1200s'